apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-repo-server
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/part-of: argocd
spec:
  replicas: 2
  selector:
    matchLabels:
      'app.kubernetes.io/name': argocd-repo-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-repo-server  
    spec:
      imagePullSecrets:
        - name: private-registry
      # 1. Define an emptyDir volume which will hold the custom binaries
      volumes:
        - name: custom-tools
          emptyDir: {}
        ## Added this
        ## Add this when you are using age ONLY. Not need using AWS KMS key for encryption
        - name: sops-age
          secret:
            secretName: sops-age
      # 2. Use an init container to download/copy custom binaries into the emptyDir
      initContainers:
        - name: download-tools
          # imagePullSecrets:
          #   - name: private-registry
          image: ghcr.io/asongent/alpine:3.8 #jmugu/alpine:3.8
          command: [sh, -c]
          args:
            - wget -qO- https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.5.7/kustomize_v4.5.7_linux_amd64.tar.gz | tar -xvzf - &&
              mv kustomize /custom-tools/kustomize_4_5_7 #kustomize_4_5_7 could be removed 
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
        - name: install-ksops
          image: ghcr.io/asongent/viaductoss/ksops:v4.1.0 #jmugu/ksops:v4.1.0  #viaductoss/ksops:v4.1.0 
          command: ["/bin/sh", "-c"]
          args:
            - echo "Installing KSOPS...";
              cp ksops /custom-tools/;
              cp /custom-tools/ksops 
              cp $GOPATH/bin/kustomize /custom-tools/;
              echo "Done."
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
      # 3. Volume mount the custom-tools directory to the repo-server
      containers:  
        - name: argocd-repo-server
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
            - mountPath: /usr/local/bin/kustomize
              name: custom-tools
              subPath: kustomize
              # Verify this matches a XDG_CONFIG_HOME=/.config env variable
            - mountPath: /.config/kustomize/plugin/viaduct.ai/v1/ksops/ksops
              name: custom-tools
              # subPath: ksops.so default
              subPath: ksops
            ##Added mountPath
            - mountPath: /.config/sops/age/keys.so
              name: sops-age
              subPath: keys.so
          # 4. Set the XDG_CONFIG_HOME env variable to allow kustomize to detect the plugin
          env:
            - name: XDG_CONFIG_HOME
              value: /.config
            ## addefd this line for sops enc
            - name: SOPS_AGE_KEY_FILE
              value: /.config/sops/age/keys.so

        
      



# ###Original File below
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: argocd-repo-server
#   labels:
#     app.kubernetes.io/component: repo-server
#     app.kubernetes.io/name: argocd-repo-server
#     app.kubernetes.io/part-of: argocd
# spec:
#   replicas: 3
#   selector:
#     matchLabels:
#       'app.kubernetes.io/name': argocd-repo-server
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/name: argocd-repo-server  
#     spec:
#       # 1. Define an emptyDir volume which will hold the custom binaries
#       volumes:
#         - name: custom-tools
#           emptyDir: {}
#         ## Added this
#         - name: sops-age
#           secret:
#             secretName: sops-age
#       # 2. Use an init container to download/copy custom binaries into the emptyDir
#       initContainers:
#         # - name: download-tools
#         #   image: alpine:3.8
#         #   command: [sh, -c]
#         #   args:
#         #     - wget -qO- https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.5.7/kustomize_v4.5.7_linux_amd64.tar.gz | tar -xvzf - &&
#         #       mv kustomize /custom-tools/ #/kustomize_4_5_7
#         #   volumeMounts:
#         #     - mountPath: /custom-tools
#         #       name: custom-tools
#         - name: install-ksops
#           image: viaductoss/ksops:v4.0.1
#           command: ["/bin/sh", "-c"]
#           args:
#           # - 'echo "Installing KSOPS..."; cp ksops /custom-tools/; cp $GOPATH/bin/kustomize /custom-tools/; echo "Done.";'
#             - echo "Installing KSOPS...";
#               export PKG_NAME=ksops;
#               mv ${PKG_NAME}.so /custom-tools/;
#               mv $GOPATH/bin/kustomize /custom-tools/;
#               echo "Done.";
#           volumeMounts:
#             - mountPath: /custom-tools
#               name: custom-tools
#       # 3. Volume mount the custom-tools directory to the repo-server
#       containers:  
#         - name: argocd-repo-server
#           volumeMounts:
#             - mountPath: /custom-tools
#               name: custom-tools
#             - mountPath: /usr/local/bin/kustomize
#               name: custom-tools
#               subPath: kustomize
#               # Verify this matches a XDG_CONFIG_HOME=/.config env variable
#             - mountPath: /.config/kustomize/plugin/viaduct.ai/v1/ksops/ksops.so #Default
#             # - mountPath: /.config/kustomize/plugin/viaduct.ai/v1/ksops/ksop
#               name: custom-tools
#               # subPath: ksops.so default
#               subPath: ksops
#             ##Added mountPath
#             - mountPath: /.config/sops/age/keys.so
#               name: sops-age
#               subPath: keys.so
              
#           # 4. Set the XDG_CONFIG_HOME env variable to allow kustomize to detect the plugin
#           env:
#             - name: XDG_CONFIG_HOME
#               value: /.config
#             ## addefd this line for sops enc
#             - name: SOPS_AGE_KEY_FILE
#               value: /.config/sops/age/keys.so
      
